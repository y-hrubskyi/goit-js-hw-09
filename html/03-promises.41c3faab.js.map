{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAGMC,EAAiBC,SAASC,cAAc,SAiC9C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1CPL,EAAeY,iBAAiB,UAEhC,SAAgCC,GAC9BA,EAAMC,iBAEN,IAKIC,EAAAF,EAAMG,cAAcC,SAJbC,EAIPH,EAJFV,MAASc,MACDC,EAGNL,EAHFK,KAAQD,MACEE,EAERN,EAFFM,OAAUF,MACVG,EACEP,EADFO,OAEFA,EAAOC,UAAW,EAElB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOJ,GAASG,GAAK,EAAG,CAC3C,IAAME,EAAeD,OAAOP,GAASO,OAAOL,IAASI,EAAI,GAEzDrB,EAAcqB,EAAGE,GACdC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBP,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBP,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAG1DmB,IAAMC,OAAOJ,IACfZ,YAAW,WACTa,EAAOC,UAAW,EAClBvB,EAAekC,O,GACdR,EAAeD,OAAOL,G","sources":["src/js/03-promises.js"],"sourcesContent":["//libraries\nimport { Notify } from 'notiflix';\n\n//code\nconst promiseFormRef = document.querySelector('.form');\npromiseFormRef.addEventListener('submit', onPromiseFormRefSubmit);\n\nfunction onPromiseFormRefSubmit(event) {\n  event.preventDefault();\n\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n    button,\n  } = event.currentTarget.elements;\n  button.disabled = true;\n\n  for (let i = 1; i <= Number(amount); i += 1) {\n    const currentDelay = Number(delay) + Number(step) * (i - 1);\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    if (i === Number(amount))\n      setTimeout(() => {\n        button.disabled = false;\n        promiseFormRef.reset();\n      }, currentDelay + Number(step));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$promiseFormRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","value","step","amount","button","disabled","i","Number","currentDelay","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.41c3faab.js.map"}